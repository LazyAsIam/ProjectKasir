<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kasir</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icon -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        body {
            background-color: #FFA500;
            color: #000000;
        }

        .navbar {
            background-color: #000000 !important;
        }

        .navbar .navbar-brand,
        .navbar .nav-link {
            color: #FFA500 !important;
        }

        h1 {
            color: #000000;
            font-weight: bold;
        }

        .table-primary {
            background-color: #000000 !important;
            color: #FFA500;
        }

        .table-bordered th,
        .table-bordered td {
            border-color: #000000 !important;
        }

        .btn-primary {
            background-color: #000000 !important;
            border-color: #000000 !important;
            color: #FFA500 !important;
        }

        .btn-primary:hover {
            background-color: #FFA500 !important;
            border-color: #FFA500 !important;
            color: #000000 !important;
        }

        .btn-warning {
            background-color: #FFDD57 !important;
            color: #000000 !important;
        }

        .btn-danger {
            background-color: #DC3545 !important;
            color: #FFFFFF !important;
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand" href="#">Kasir Kue Keyza</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/kasir">Kasir</a>
                    </li>
                    <li class="nav-item">
                        <span class="nav-link" id="user-info">
                            <% if (user) { %>
                            Welcome, <%= user.username %>
                            <% } else { %>
                            Welcome, Guest
                            <% } %>
                        </span>
                    </li>
                    <li class="nav-item">
                        <% if (user) { %>
                        <a class="btn btn-danger btn-sm ms-3" href="/logout">Logout</a>
                        <% } else { %>
                        <a class="btn btn-primary btn-sm ms-3" href="/login">Login</a>
                        <% } %>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        <h1 class="text-center">Kasir</h1>

        <!-- Search for Items -->
        <div class="mb-3">
            <label for="searchItem" class="form-label">Cari Kue</label>
            <input type="text" class="form-control" id="searchItem" onkeyup="searchItems()" placeholder="Masukkan nama ...">kue
            <ul id="searchResults" class="list-group mt-2" style="display:none;"></ul>
        </div>

        <!-- Add Item to Shopping List -->
        <h2 class="mt-5">Daftar Belanjaan</h2>
        <form id="shoppingForm" action="/kasir" method="POST">
            <table class="table table-bordered table-striped">
                <thead class="table-primary">
                    <tr>
                        <th>No.</th>
                        <th>Nama Kue</th>
                        <th>Harga</th>
                        <th>Jumlah</th>
                        <th>Aksi</th>
                    </tr>
                </thead>
                <tbody id="shoppingList"></tbody>
            </table>
            <button type="submit" class="btn btn-primary mt-3">Simpan Transaksi</button>
        </form>

        <h2 class="mt-5">Penghasilan</h2>
        <p>Harian: <%= dailyIncome %></p>
        <p>Mingguan: <%= weeklyIncome %></p>
        <p>Bulanan: <%= monthlyIncome %></p>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let shoppingList = [];

        // Search Items from the database based on the input text
        async function searchItems() {
            let searchValue = document.getElementById("searchItem").value;
            if (searchValue.length > 0) {
                const response = await fetch(`/api/items/search?name=${searchValue}`);
                const items = await response.json();
                displaySearchResults(items);
            } else {
                document.getElementById("searchResults").style.display = "none";
            }
        }

        // Display search results
        function displaySearchResults(items) {
            const resultsContainer = document.getElementById("searchResults");
            resultsContainer.innerHTML = '';
            items.forEach(item => {
                const listItem = document.createElement("li");
                listItem.classList.add("list-group-item");
                listItem.textContent = item.name;
                listItem.onclick = () => addToShoppingList(item);
                resultsContainer.appendChild(listItem);
            });
            resultsContainer.style.display = "block";
        }

        // Add selected item to shopping list
        function addToShoppingList(item) {
            const quantity = prompt(`Berapa jumlah ${item.name} yang ingin dibeli?`);
            if (quantity && !isNaN(quantity) && quantity > 0) {
                shoppingList.push({ name: item.name, price: item.price, quantity: parseInt(quantity), id: item.id });
                renderShoppingList();
                document.getElementById("searchItem").value = '';
                document.getElementById("searchResults").style.display = "none";
            }
        }

        // Render the shopping list table
        function renderShoppingList() {
            const shoppingListContainer = document.getElementById("shoppingList");
            shoppingListContainer.innerHTML = '';
            shoppingList.forEach((item, index) => {
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${item.name}</td>
                    <td>${item.price}</td>
                    <td><input type="number" value="${item.quantity}" onchange="updateQuantity(${index}, this.value)" min="1"></td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editItem(${index})">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteItem(${index})">Hapus</button>
                    </td>
                `;
                shoppingListContainer.appendChild(row);
            });
        }

        // Update quantity of an item in the shopping list
        function updateQuantity(index, value) {
            if (value > 0) {
                shoppingList[index].quantity = parseInt(value);
            } else {
                alert('Jumlah harus lebih besar dari 0');
            }
        }

        // Delete an item from the shopping list
        function deleteItem(index) {
            shoppingList.splice(index, 1);
            renderShoppingList();
        }

        // Edit an item in the shopping list
        function editItem(index) {
            const newQuantity = prompt(`Ubah jumlah ${shoppingList[index].name}:`, shoppingList[index].quantity);
            if (newQuantity && !isNaN(newQuantity) && newQuantity > 0) {
                shoppingList[index].quantity = parseInt(newQuantity);
                renderShoppingList();
            }
        }

        // Save the transaction to the daily, weekly, and monthly earnings
        document.getElementById("shoppingForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const totalAmount = shoppingList.reduce((total, item) => total + item.price * item.quantity, 0);

            const transaction = {
                dailyIncome: totalAmount,
                weeklyIncome: totalAmount,
                monthlyIncome: totalAmount,
            };

            const response = await fetch('/api/saveTransaction', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(transaction),
            });

            if (response.ok) {
                alert('Transaksi disimpan!');
                shoppingList = [];
                renderShoppingList();
            }
        });
    </script>
</body>

</html>